package substanceRules
import java.util.ArrayList
import com.sbnz.model.Color
import com.sbnz.model.Structure
import com.sbnz.model.Experiment
import com.sbnz.model.Substance
import com.sbnz.model.ResponseDTO
import com.sbnz.model.Cation
import com.sbnz.model.Anion

// ------------------ CATIONS ------------------------

rule "Silver"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "colorlessSolutionWithWater")
        exists Experiment(getCode() == "reactionWithHCl")
        exists Experiment(getCode() == "warmWaterInsoluble")
        exists Experiment(getCode() == "solubleInNH4OH")
        exists Experiment(getCode() == "whiteWithHNO3")

    then
        System.out.println("Silver");
        insert(new Cation("Silver"));
    end

rule "Lead"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "colorlessSolutionWithWater")
        exists Experiment(getCode() == "reactionWithHCl")
        exists Experiment(getCode() == "warmWaterSoluble")
        exists Experiment(getCode() == "yellowWithK2CrO4")
    then
        System.out.println("Lead");
        insert(new Cation("Lead"));
    end

rule "Mercury"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "colorlessSolutionWithWater")
        exists Experiment(getCode() == "reactionWithHCl")
        exists Experiment(getCode() == "warmWaterInsoluble")
        exists Experiment(getCode() == "greyWithNH4OH")
    then
        System.out.println("Mercury");
        insert(new Cation("Mercury"));
    end

rule "Iron"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawInNH4OH")
        exists Experiment(getCode() == "darkRedSedimentFromNH4OH")
        exists Experiment(getCode() == "noReactionWithHCl")
    then
        System.out.println("Iron");
        insert(new Cation("Iron"));
    end

rule "Aluminium"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawInNH4OH")
        exists Experiment(getCode() == "whiteSedimentFromNH4OH")
        exists Experiment(getCode() == "noReactionWithHCl")
    then
        System.out.println("Aluminium");
        insert(new Cation("Aluminium"));
    end

rule "Chromium"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawInNH4OH")
        exists Experiment(getCode() == "GrayishGreenSedimentFromNH4OH")
        exists Experiment(getCode() == "noReactionWithHCl")
        exists Experiment(getCode() == "solubleRawInNH4OH")
    then
        System.out.println("Chromium");
        insert(new Cation("Chromium"));
    end

rule "Manganese"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawIn(NH4)2S")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2SmeatColoredSediment")
        exists Experiment(getCode() == "noReactionWithHCl")
        exists Experiment(getCode() == "solubleRawInNH4OH")
        exists Experiment(getCode() == "solubleRawIn(NH4)2S")
    then
        System.out.println("Manganese");
        insert(new Cation("Manganese"));
    end

rule "Zinc"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawIn(NH4)2S")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2SwhiteSediment")
        exists Experiment(getCode() == "noReactionWithHCl")
        exists Experiment(getCode() == "solubleRawInNH4OH")
        exists Experiment(getCode() == "solubleRawIn(NH4)2S")
    then
        System.out.println("Zinc");
        insert(new Cation("Zinc"));
    end

rule "Barium"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3butSolubleInCH3COOH")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3butSolubleInCH3COOHYellowWithK2Cr")
        exists Experiment(getCode() == "noReactionWithHCl")
        exists Experiment(getCode() == "solubleRawInNH4OH")
    then
        System.out.println("Barium");
        insert(new Cation("Barium"));
    end

rule "Calcium"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3butSolubleInCH3COOH")
        exists Experiment(getCode() == "insolubleRawIn(NH4)2CO3butSolubleInCH3COOHNotYellowWithK2Cr")
        exists Experiment(getCode() == "noReactionWithHCl")
        exists Experiment(getCode() == "solubleRawInNH4OH")
    then
        System.out.println("Calcium");
        insert(new Cation("Calcium"));
    end

// ------------------ ANIONS ------------------------

rule "SO4"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "whiteSedimentInBaCl2")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
    then
        System.out.println("SO4");
        insert(new Anion("SO4"));
    end

rule "PO4"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "yellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
    then
        System.out.println("PO4");
        insert(new Anion("PO4"));
    end

rule "CO3"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "gasInBaOH2")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
    then
        System.out.println("CO3");
        insert(new Anion("CO3"));
    end

rule "C2O4"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "crystalSedimentInCaCl2")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
    then
        System.out.println("C2O4");
        insert(new Anion("C2O4"));
    end

rule "Cl"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "cheesySedimentInNH4OH")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
    then
        System.out.println("Cl");
        insert(new Anion("Cl"));
    end

rule "NO3"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noCheesySedimentInNH4OH")
        exists Experiment(getCode() == "noVinegarSmellInH2SO4")
        exists Experiment(getCode() == "ringInH2SO4")
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
    then
        System.out.println("NO3");
        insert(new Anion("NO3"));
    end

rule "CH3COO"
    lock-on-active true
    when
        $s : ResponseDTO();
        exists Experiment(getCode() == "noCheesySedimentInNH4OH")
        exists Experiment(getCode() == "vinegarSmellInH2SO4")
        exists Experiment(getCode() == "noRingInH2SO4")
        exists Experiment(getCode() == "noYellowSedimentInNH42MoO4")
        exists Experiment(getCode() == "noGasInBaOH2")
        exists Experiment(getCode() == "noCrystalSedimentInCaCl2")
        exists Experiment(getCode() == "noWhiteSedimentInBaCl2")
    then
        System.out.println("CH3COO");
        insert(new Anion("CH3COO"));
    end

// ------------------ SUBSTANCES ------------------------

rule "Silver sulfate - Ag2SO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "colorless")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Silver sulfate - Ag2SO4");
        $s.addSolution("Silver sulfate - Ag2SO4");

    end

rule "Silver phosphate - Ag3PO4"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Silver phosphate - Ag3PO4");
        $s.addSolution("Silver phosphate - Ag3PO4");

    end

rule "Silver carbonate - Ag2CO3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "pale yellow")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Silver carbonate - Ag2CO3");
        $s.addSolution("Silver carbonate - Ag2CO3");

    end

rule "Silver oxalate - Ag2C2O4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "C2O4")

    then
        System.out.println("Silver oxalate - Ag2C2O4");
        $s.addSolution("Silver oxalate - Ag2C2O4");

    end

rule "Silver chloride - AgCl"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Silver chloride - AgCl");
        $s.addSolution("Silver chloride - AgCl");

    end

rule "Silver nitrate - AgNO3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "colorless")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Silver")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Silver nitrate - AgNO3");
        $s.addSolution("Silver nitrate - AgNO3");

    end

rule "Lead(II) sulfate - PbSO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Lead(II) sulfate - PbSO4");
        $s.addSolution("Lead(II) sulfate - PbSO4");

    end

rule "Lead(II) phosphate - Pb3(PO4)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Lead(II) phosphate - Pb3(PO4)2");
        $s.addSolution("Lead(II) phosphate - Pb3(PO4)2");

    end

rule "Cerussite - PbCO3"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Cerussite - PbCO3");
        $s.addSolution("Cerussite - PbCO3");

    end

rule "Lead(II) chloride - PbCl2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Lead(II) chloride - PbCl2");
        $s.addSolution("Lead(II) chloride - PbCl2");

    end

rule "Lead(II) nitrate - Pb(NO3)2"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Lead(II) nitrate - Pb(NO3)2");
        $s.addSolution("Lead(II) nitrate - Pb(NO3)2");

    end

rule "Lead(II) acetate - Pb(CH3COO)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Lead")
        exists Anion(getElement() == "CH3COO")

    then
        System.out.println("Lead(II) acetate - Pb(CH3COO)2");
        $s.addSolution("Lead(II) acetate - Pb(CH3COO)2");

    end

rule "Mercury(II) sulfate - HgSO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Mercury")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Mercury(II) sulfate - HgSO4");
        $s.addSolution("Mercury(II) sulfate - HgSO4");

    end

rule "Mercury(II) chloride - HgCl2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Mercury")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Mercury(II) chloride - HgCl2");
        $s.addSolution("Mercury(II) chloride - HgCl2");

    end

rule "Mercury(II) nitrate - Hg(NO3)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "colorless")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Mercury")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Mercury(II) nitrate - Hg(NO3)2");
        $s.addSolution("Mercury(II) nitrate - Hg(NO3)2");

    end

rule "Mercury(II) acetate - Hg(CH3COO)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "pale yellow")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Mercury")
        exists Anion(getElement() == "CH3COO")

    then
        System.out.println("Mercury(II) acetate - Hg(CH3COO)2");
        $s.addSolution("Mercury(II) acetate - Hg(CH3COO)2");

    end

rule "Iron(III) sulfate - Fe2(SO4)3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "grayish-white")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Iron")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Iron(III) sulfate - Fe2(SO4)3");
        $s.addSolution("Iron(III) sulfate - Fe2(SO4)3");

    end

rule "Iron(III) phosphate - FePO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "yellow-brown")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Iron")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Iron(III) phosphate - FePO4");
        $s.addSolution("Iron(III) phosphate - FePO4");

    end

rule "Iron(III) chloride - FeCl3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "brown")
        Structure(getAnswer() == "solution")
        exists Cation(getElement() == "Iron")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Iron(III) chloride - FeCl3");
        $s.addSolution("Iron(III) chloride - FeCl3");

    end

rule "Iron(III) nitrate - Fe(NO3)3"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Iron")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Iron(III) nitrate - Fe(NO3)3");
        $s.addSolution("Iron(III) nitrate - Fe(NO3)3");

    end

rule "Aluminium sulfate - Al2(SO4)3"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Aluminium")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Aluminium sulfate - Al2(SO4)3");
        $s.addSolution("Aluminium sulfate - Al2(SO4)3");

    end

rule "Aluminium phosphate - AlPO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Aluminium")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Aluminium phosphate - AlPO4");
        $s.addSolution("Aluminium phosphate - AlPO4");

    end

rule "Aluminium chloride - AlCl3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Aluminium")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Aluminium chloride - AlCl3");
        $s.addSolution("Aluminium chloride - AlCl3");

    end

rule "Aluminium nitrate - Al(NO3)3"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Aluminium")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Aluminium nitrate - Al(NO3)3");
        $s.addSolution("Aluminium nitrate - Al(NO3)3");

    end

rule "Chromium(III) sulfate - Cr2(SO4)3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "reddish-brown")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Chromium")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Chromium(III) sulfate - Cr2(SO4)3");
        $s.addSolution("Chromium(III) sulfate - Cr2(SO4)3");

    end

rule "Chromium(III) chloride - CrCl3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "purple")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Chromium")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Chromium(III) chloride - CrCl3");
        $s.addSolution("Chromium(III) chloride - CrCl3");

    end

rule "Manganese(II) sulfate - MnSO4"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Manganese")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Manganese(II) sulfate - MnSO4");
        $s.addSolution("Manganese(II) sulfate - MnSO4");

    end

rule "Manganese(II) carbonate - MnCO3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Manganese")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Manganese(II) carbonate - MnCO3");
        $s.addSolution("Manganese(II) carbonate - MnCO3");

    end

rule "Manganese(II) chloride - MnCl2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "pink")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Manganese")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Manganese(II) chloride - MnCl2");
        $s.addSolution("Manganese(II) chloride - MnCl2");

    end

rule "Manganese(II) nitrate - Mn(NO3)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Manganese")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Manganese(II) nitrate - Mn(NO3)2");
        $s.addSolution("Manganese(II) nitrate - Mn(NO3)2");

    end

rule "Manganese(II) acetate - Mn(CH3COO)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Manganese")
        exists Anion(getElement() == "CH3COO")

    then
        System.out.println("Manganese(II) acetate - Mn(CH3COO)2");
        $s.addSolution("Manganese(II) acetate - Mn(CH3COO)2");

    end

rule "Zinc sulfate - ZnSO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Zinc sulfate - ZnSO4");
        $s.addSolution("Zinc sulfate - ZnSO4");

    end

rule "Zinc phosphate - Zn3(PO4)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Zinc phosphate - Zn3(PO4)2");
        $s.addSolution("Zinc phosphate - Zn3(PO4)2");

    end

rule "Smithsonite - ZnCO3"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Smithsonite - ZnCO3");
        $s.addSolution("Smithsonite - ZnCO3");

    end

rule "Zinc chloride - ZnCl2"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Zinc chloride - ZnCl2");
        $s.addSolution("Zinc chloride - ZnCl2");

    end

rule "Zinc nitrate - Zn(NO3)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "colorless")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Zinc nitrate - Zn(NO3)2");
        $s.addSolution("Zinc nitrate - Zn(NO3)2");

    end

rule "Zinc acetate - Zn(CH3COO)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Zinc")
        exists Anion(getElement() == "CH3COO")

    then
        System.out.println("Zinc acetate - Zn(CH3COO)2");
        $s.addSolution("Zinc acetate - Zn(CH3COO)2");

    end

rule "Barium carbonate - BaCO3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Barium")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Barium carbonate - BaCO3");
        $s.addSolution("Barium carbonate - BaCO3");

    end

rule "Barium oxalate - BaC2O4"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Barium")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Barium oxalate - BaC2O4");
        $s.addSolution("Barium oxalate - BaC2O4");

    end

rule "Barium chloride - BaCl2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Barium")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Barium chloride - BaCl2");
        $s.addSolution("Barium chloride - BaCl2");

    end

rule "Barium nitrate - Ba(NO3)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "crystals")
        exists Cation(getElement() == "Barium")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Barium nitrate - Ba(NO3)2");
        $s.addSolution("Barium nitrate - Ba(NO3)2");

    end

rule "Calcium sulfate - CaSO4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "SO4")

    then
        System.out.println("Calcium sulfate - CaSO4");
        $s.addSolution("Calcium sulfate - CaSO4");

    end

rule "Tricalcium phosphate - Ca3(PO4)2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "PO4")

    then
        System.out.println("Tricalcium phosphate - Ca3(PO4)2");
        $s.addSolution("Tricalcium phosphate - Ca3(PO4)2");

    end

rule "Calcium carbonate - CaCO3"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "CO3")

    then
        System.out.println("Calcium carbonate - CaCO3");
        $s.addSolution("Calcium carbonate - CaCO3");

    end

rule "Calcium oxalate - CaC2O4"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "solid")
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "C2O4")

    then
        System.out.println("Calcium oxalate - CaC2O4");
        $s.addSolution("Calcium oxalate - CaC2O4");

    end

rule "Calcium chloride - CaCl2"
    when
        $s : ResponseDTO();
        Color(getAnswer() == "white")
        Structure(getAnswer() == "powder")
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "Cl")

    then
        System.out.println("Calcium chloride - CaCl2");
        $s.addSolution("Calcium chloride - CaCl2");

    end

rule "Calcium nitrate - Ca(NO3)2"
    when
        $s : ResponseDTO();
        exists Cation(getElement() == "Calcium")
        exists Anion(getElement() == "NO3")

    then
        System.out.println("Calcium nitrate - Ca(NO3)2");
        $s.addSolution("Calcium nitrate - Ca(NO3)2");

    end
